type ApartmentComplex {
    id: String
    type: ApartmentComplexType
    name: String
    city: City
    district: District
    class: ApartmentComplexClass
    levels: Int
    sections: Int
    price: Float
    beginDate: String
    endDate: String
    images: ApartmentComplexImage
    houses: [House]
}

input ApartmentComplexInput {
    type: KeyDisplayNameInput
    name: String
    city: KeyDisplayNameInput
    district: KeyDisplayNameInput
    class: KeyDisplayNameInput
    levels: Int
    sections: Int
    price: Float
    beginDate: String
    endDate: String
}

type SingleImage {
    uuid: String
    downloadUrl: String
}

type NamedImage {
    uuid: String
    downloadUrl: String
    name: String
}

type PreviewImage {
    uuid: String
    downloadUrl: String
    name: String
    previewImageUrl: String
}
type ApartmentComplexImage {
    CHESS_GRID: SingleImage
    SITE: SingleImage
    MOBILE: SingleImage
    VR: [PreviewImage]
    HALF_VR: [PreviewImage]
    PHOTO: [NamedImage]
}

type ImageMeta {
    downloadUrl: String
}
type ImageType {
    value: String
}

type Mutation {
    createApartmentComplex(apartmentComplex: ApartmentComplexInput): ApartmentComplex
    addImage(file: Upload!, mode: String, uuid: String, name: String): ImageMeta!
    deleteImage(mode: String, uuid: String, imageId: String): String
}

extend type Query {
    getAllApartmentComplexes: [ApartmentComplex]
    getApartmentComplex(uuid: String): ApartmentComplex
}
