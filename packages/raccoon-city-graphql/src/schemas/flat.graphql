type HouseFlat {
    id: String
    flatNumber: Int
    price: Float
    level: Int
    section: String
    area: Float
    status: String
    roomAmount: String
    squarePrice: String
    layout: BaseLayout
}

input HouseFlatInput {
    id: String
    flatNumber: Int
    price: Float
    level: Int
    section: String
    area: Float
    status: String
    squarePrice: String
    roomAmount: String
}

type GroupedByLevelFlat {
    id: String
    level: Int
    flats: [HouseFlat]
}

type GroupedBySectionFlat {
    id: String
    section: String
    levels: [GroupedByLevelFlat]
}

type GroupedBySectionResult {
    maxPrice: Float
    minPrice: Float
    maxArea: Float
    minArea: Float
    groupedFlats: [GroupedBySectionFlat]
}
type Mutation {
    updateFlat(flat: HouseFlatInput): HouseFlat
    createFlat(houseGuid: String, flat: HouseFlatInput): HouseFlat
    deleteFlat(uuid: String): Boolean
}

extend type Query {
    getFlats(uuid: String!): [HouseFlat]
    getGroupedFlatsBySection(uuid: String!): GroupedBySectionResult
    getSectionData(sectionId: String!): GroupedBySectionFlat
}
