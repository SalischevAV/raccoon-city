type House {
    id: String
    name: String
    class: KeyDisplayName
    levels: Int
    price: Float
    parking: Boolean
    address: String
    beginDate: String
    endDate: String
    images: HouseImages
}

input HouseInput {
    name: String
    class: KeyDisplayNameInput
    levels: Int
    price: Float
    parking: Boolean
    address: String
    beginDate: String
    endDate: String
}

type HouseImages {
    CHESS_GRID: SingleImage
    SITE: SingleImage
    MOBILE: SingleImage
    VR: [PreviewImage]
    HALF_VR: [PreviewImage]
    PHOTO: [NamedImage]
}

type Mutation {
    createHouse(apartmentComplexId: String!, houseData: HouseInput!): ApartmentComplex
    addHouseImage(file: Upload!, mode: String!, uuid: String!, name: String): ImageMeta!
    deleteHouseImage(mode: String!, uuid: String!, imageId: String!): String
    addLevel(sectionId: String!): Boolean
    deleteLevel(levelId: String!): Boolean
    deleteSection(sectionId: String!): Boolean
    reorderLevels(sectionId: String!, oldIndex: Int!, newIndex: Int!): Boolean
}

extend type Query {
    getHouses(apartmentComplexId: String!): [House]
    getHouse(uuid: String!): House
    getMaxLevelInSection(sectionId: String!): Int
}
